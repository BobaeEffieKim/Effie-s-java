package practice_0702_inheritance;

public class Explanation {
/*
 * [상속(inheritance)이란]
 * 
 * 	/ 객체 지향 프로그램에서의 상속
 * - 자식(하위 혹은 파생) 클래스가 부모(상위)클래스의 멤버를 물려받는 것
 * - 자식이 부모를 선택해서 물려받음
 * - 상속대상 : 부모의 필드와 메소드
 * ex.
 * 부모클래스 안에 '필드1'과 '메소드1()'이 있음
 * ↑ (상속)
 * 자식클래스는 부모클래스의 '필드1'과 '메소드1()'은 따로 선언안해도 그대로 물려받음
 * 자식클래스에서 추가적으로 '필드2'와 '메소드2()'를 정의
 * 
 * 	/상속의 효과
 * - 부모클래스를 재사용해서 자식클래스를 빨리 개발가능
 * 	-> 부모클래스의 멤버를 따로 선언안해도 물려받기때문에
 * - 반복된 코드의 중복 줄일수있다
 * -유지보수의 편리성을 제공해준다
 * 	-> 만약 부모클래스에서 'm1()'이라는 메소드 수정해주면 자동으로 자식클래스것들도 다 수정됨
 * -객체의 다형성 구현가능
 * 
 *	/상속대상의 제한
 *-부모클래스의 private접근제한을 갖는 필드와 메소드는 제외됨 
 *-부모클래스가 다른 패키지에 있을 경우, default 갖는 필드와 메소드도 제한됨
 *
 *
 * 	[extends 키워드]
 * - 자식 클래스가 상속할 부모 클래스를 지정하는 키워드
 * 	부모 : public class A {
 * 			int field1;
 * 			void method1(){}
 * 		  }
 * 	자식 : public class B extends A {
 * 			String field2;
 * 			void method2(){}
 * 		 }
 * 		=> field1 , method1()을 자식이 물려받음
 * - 다중 상속은 불가 => class 자식클래스 extends 부모1, 부모2 (X)
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 */
}
