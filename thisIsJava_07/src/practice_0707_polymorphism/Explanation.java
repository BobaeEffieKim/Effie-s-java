package practice_0707_polymorphism;

public class Explanation {
/*
 * [다형성]
 * -같은 타입이지만 실행 결과가 다양한 객체를 대입(이용)할 수 있는 성질을 말한다.
 * -하나의 타입에 종류가 다른 다양한 객체를 대입할 수 있는것
 * 	-> 부모 타입에는 모든 자식 객체가 대입될 수 있다.
 * 		-> 자식 타입은 부모 타입으로 자동 타입 변환된다
 * 	-> 예) A(부모=종류), B(자식), C(자식)
 * 		A a = new B(); => a상속받았기때문에 a로 타입변환 된다
 * 		A a = new C();
 * 
 * 
 * -효과 : 객체를 부품화시킬 수 있다
 * 
 * 	=> 다형성은 객체를 부품화 시킨다
 * 	=> 자동차는 타이어 타입(부모)으로 한국 타이어(객체)와 금호 타이어(객체)를 
 * 		장착하여(대입) 사용하지만
 * 		각 타이어의 성능은 다르게 나온다 (다형성)
 * 	=> 한국타이어 사용하다 펑크나면 그 자리에 금호타이어를 넣을 수 있다.
 * 		-> 부품을 사용하다 문제가 생기면 다른 부품으로 교체 가능
 * 
 * ------------------------------------------------------
 * 
 * [자동 타입 변환]
 * - 프로그램 실행 도중에 자동적으로 타입 변환이 일어나는 것
 * 
 * 부모클래스 변수 = 자식클래스타입;
 * class Animal{
 * }
 * ↑(상속)
 * class Cat extends Animal{
 * }
 * 
 * 
 * Cat cat = new Cat();
 * Animal animal = cat;
 * 	//Animal animal = new Cat(); 도 가능
 * 
 * cat == animal => true
 * 
 */
}
